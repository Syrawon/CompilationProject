main: 	START
--########DEBUG : Bloc de type LDeclChamp IS LInstr--
--DeclChamp.
--Var x : --DeclChamp.
--Var y : Affectation : constante 9
PUSHI 9
STOREG x.adresse()
Affectation : constante 2
PUSHI 2
STOREG y.adresse()
PUSHG x.adresse()
PUSHI 9
INF
JZ else0
--IL Y AURA UN ENVOI vers "x est inf a 9" d'operateur 278

--println affiche la chaine suivante :
PUSHS "x est inf a 9"
WRITES
PUSHS "\n"
WRITES
JUMP endif1
else0:	PUSHS "y est inf a x"
endif1:	NOP
--IL Y AURA UN ENVOI vers "valeur de x : " d'operateur 278

--print affiche la chaine suivante :
PUSHS "valeur de x : "
WRITES
--IL Y AURA UN ENVOI vers x d'operateur 276
PUSHA toString
CALL
--IL Y AURA UN ENVOI vers "valeur de y : " d'operateur 278

--print affiche la chaine suivante :
PUSHS "valeur de y : "
WRITES
--IL Y AURA UN ENVOI vers y d'operateur 276
PUSHA toString
CALL
STOP

--------Initialiser les tables virtuelles.--------

--Classe Point
ALLOC 0
JUMP main

--------Initialisation des invocations.--------

--invoquer methode numero 1 du receveur
call1: 	PUSHL -1
DUPN 1
LOAD 0
LOAD 0
CALL
RETURN
--invoquer methode numero 2 du receveur
call2: 	PUSHL -1
DUPN 1
LOAD 0
LOAD 1
CALL
RETURN
